

// Automatic phase selector code for special loads 


//#include <Wire.h> 
//#include <LiquidCrystal_I2C.h>
//LiquidCrystal_I2C lcd(0x27,16,2);  // set the LCD address to 0x27 for a 16 chars and 2 line display

#include <LiquidCrystal.h>

const int rs = 7, en = 6, d4 = 5 , d5 = 4, d6 = 3, d7 = 2;
LiquidCrystal lcd(rs, en, d4, d5, d6, d7);


//#include <LiquidCrystal_PCF8574.h>
//#include <Wire.h>
//
//LiquidCrystal_PCF8574 lcd(0x27);  // set the LCD address to 0x27 for a 16 chars and 2 line display

//int show = -1;


int Relay1 = 8;
int Relay2 = 9;
int Relay3 = 11;
int alarm  = 10;
int BACKUP = 12;

 /*int Relay4 = 7;
int Relay5 = 8;*/

float Phase1;
float Phase2;
float Phase3;


//#include <LiquidCrystal.h>
#include "EmonLib.h"             // Include Emon Library
#define VOLT_CAL 592
EnergyMonitor emon1;             // Create an instance for Phase1
EnergyMonitor emon2;             // Create an instance for Phase2
EnergyMonitor emon3;             // Create an instance for Phase3



void setup() {
// put your setup code here, to run once:
 
lcd.begin(16, 2);
//lcd.setCursor(0,0);
//lcd.print("Auto-Phase Detector");
//delay(1000);
// Print a message to the LCD.
//  lcd.print("AVD,");

  
  
//  lcd.init();                      // initialize the lcd 
//  lcd.init();             // Print a message to the LCD.
//  lcd.backlight();
//  lcd.setCursor(0,0);
//  lcd.print("AVD SYSTEM ");
//  lcd.setCursor(2,1);

// Wire.begin();
// Wire.beginTransmission(0x27);
// lcd.begin(16, 2);
// lcd.setBacklight(255);

Serial.begin(9600);
emon1.voltage(0, 234.26, 1.7);  // Voltage: input pin, calibration, phase_shift
//emon1.current(1, 111.1);       // Current: input pin, calibration.

emon2.voltage(1, 234.26, 1.7);  // Voltage: input pin, calibration, phase_shift
//emon2.current(3, 111.1);       // Current: input pin, calibration.

emon3.voltage(2, 234.26, 1.7);  // Voltage: input pin, calibration, phase_shift
//emon3.current(5, 111.1);       // Current: input pin, calibration.

pinMode(Relay1,OUTPUT);
pinMode(Relay2,OUTPUT);
pinMode(Relay3,OUTPUT);
pinMode(alarm,OUTPUT);

lcd.clear();
lcd.setCursor(0,0);
lcd.print("Auto VD");
delay(3000);
Serial.println("Automatic Voltage Detection System");

}

void(*resetFunc)(void)=0;


void loop()
{
// put your main code here, to run repeatedly:
emon1.calcVI(25,1000);                            // Calculate all. No.of wavelengths, time-out
float Phase1 = emon1.Vrms;                        //extract Vrms into Variable - Voltage in Phase1
float powerFactor1     = emon1.powerFactor;      //extract Power Factor into Variable

emon2.calcVI(25,1000);                            // Calculate all. No.of wavelengths, time-out
float Phase2 = emon2.Vrms;                        //extract Vrms into Variable - Voltage in Phase2
float powerFactor2     = emon2.powerFactor;      //extract Power Factor into Variable

emon3.calcVI(25,1000);                          // Calculate all. No.of wavelengths, time-out
float Phase3 = emon3.Vrms;                      //extract Vrms into Variable - Voltage in Phase3
float powerFactor3     = emon3.powerFactor;      //extract Power Factor into Variable


//Serial.println("Enter phase 1 voltage? : ");
//while(Serial.available()==0)
//{}
//Phase1=Serial.read();
//Serial.print("phase1:");
//Serial.println(Phase1);


int U = (Phase1<=210 && Phase2 <= 210 && Phase3 <= 210);//when all phases are low (undervoltage)[symetrical fault]
int U1 =(Phase1<=210);//whem phase 1 is undervoltage
int U2 = (Phase2<=210);//whem phase 2 is undervoltage
int U3 = (Phase3<=210);//whem phase 3 is undervoltage
int HP1 =(Phase1>=211 && Phase1 <=245);//when phase 1 is healthy
int HP2 =(Phase2>=211 && Phase2 <=245);//when phase 2 is healthy
int HP3 =(Phase3>=211 && Phase3 <=245); // when phase 3 is healthy
int H = (HP1 && HP2 && HP3); //when all phases are healthy
int O = (Phase1>= 246 && Phase2 >= 246 && Phase3 >= 246); //when there is overvolage in all the phases
int O1 =(Phase1>= 246);
int O2 =(Phase2>= 246);
int O3 =(Phase3>= 246);

Serial.println(String("Phase1:  ") + Phase1 + " V");
Serial.println(String("Phase2:  ") + Phase2 + " V");  
Serial.println(String("Phase3:  ") + Phase3 + " V");

lcd.clear();
lcd.setCursor(0,0);
lcd.print("R:");
lcd.print(Phase1,0);
lcd.print("V");
lcd.setCursor(8,0);
lcd.print("Y:");
lcd.print(Phase2,0);
lcd.print("V");
lcd.setCursor(0,1);
lcd.print("B:");
lcd.print(Phase3,0);
lcd.print("V");
delay(2000);


//lcd.setCursor(0,1);
//lcd.print("RED:");
//lcd.setCursor(0,5);
//lcd.print(Phase1);
//delay(1000);

//lcd.clear();
//lcd.setCursor(6,0);
//lcd.print("YELLOW");
//lcd.setCursor(6,1);
//lcd.print(Phase2);
//lcd.setCursor(11,0);
//lcd.print(" BLUE");
//lcd.setCursor(11,1);
//lcd.print(Phase3);



if (U)
{ 
  digitalWrite(Relay1,HIGH);  
  digitalWrite(Relay2,HIGH);
  digitalWrite(Relay3,HIGH);
  digitalWrite(alarm,HIGH);
  delay(50);
   digitalWrite(alarm,LOW);

  
  digitalWrite (BACKUP,HIGH);
  lcd.clear();
  lcd.print("Symetrical Fault");
  delay(1000);
  Serial.println("All the phases are undervoltage and the backup is activated");
  delay(1000);
}
if(H)
{
  digitalWrite(alarm,LOW);  
  digitalWrite(Relay1,LOW);
  digitalWrite(Relay2,HIGH);
  digitalWrite(Relay3,HIGH);
  lcd.clear();
  lcd.print("R, Y & B Healthy");
  delay(1000);
  Serial.println("All the phases are Health but priority is given to phase1");
  delay(1000);
}
if(O)
{
  digitalWrite(alarm,HIGH);  
  digitalWrite(Relay1,LOW);
  digitalWrite(Relay2,LOW);
  digitalWrite(Relay3,LOW);
  Serial.println("All the phases are overvoltage");
  lcd.clear();
  lcd.print("Fault-Overvoltage");
  delay(1000);
  Serial.println("All the phases are overvoltage1");
  delay(1000);
}
if(HP1 && U2 && U3)
{
  digitalWrite(alarm,LOW);  
  digitalWrite(Relay1,LOW);
  digitalWrite(Relay2,HIGH);
  digitalWrite(Relay3,HIGH);
  Serial.println("Only phase1 is healthy");
  lcd.clear();
  lcd.print("Only R healthy");
  delay(1000);
  Serial.println("Only phase1 is healthy");
  delay(1000);
  
  delay(1000);
}
if(HP2 && U1 && U3)
{
  digitalWrite(alarm,LOW);  
  digitalWrite(Relay1,HIGH);
  digitalWrite(Relay2,LOW);
  digitalWrite(Relay3,HIGH);
  Serial.println("Only phase2 is healthy");
  lcd.clear();
  lcd.print("Only Y healthy");
  delay(1000);
  Serial.println("Only phase2 is healthy");
  delay(1000);
  
  delay(1000);
}
if(HP3 && U1 && U3)
{
  digitalWrite(alarm,LOW);  
  digitalWrite(Relay1,LOW);
  digitalWrite(Relay2,LOW);
  digitalWrite(Relay3,HIGH);
  Serial.println("Only phase3 is healthy");
  delay(1000);
  lcd.clear();
  lcd.print("Only B healthy");
  delay(1000);
  Serial.println("Only phase3 is healthy");
  delay(1000);
  
}
if(U1 && U2 && HP3)
{
  digitalWrite(alarm,LOW);  
  digitalWrite(Relay1,HIGH);
  digitalWrite(Relay2,HIGH);
  digitalWrite(Relay3,LOW);
  Serial.println("only phase3 is healthy");
  delay(1000);
  lcd.clear();
  lcd.print("Only B healthy");
  delay(1000);
  Serial.println("Only phase3 is healthy");
  delay(1000);
}
if (O1 && U2 && O3)
{
  digitalWrite(alarm,HIGH);
  delay(100);
  digitalWrite(alarm,LOW);  
  digitalWrite(Relay1,LOW);
  digitalWrite(Relay2,LOW);
  digitalWrite(Relay3,LOW);
  Serial.println("NO phase is healthy");
  delay(1000);
  lcd.clear();
  lcd.print("No healthy phase");
  delay(1000);
}
if(O1 && U2 && U3)
{
  digitalWrite(alarm,HIGH);
  delay(100);
  digitalWrite(alarm,LOW);  
  digitalWrite(Relay1,LOW);
  digitalWrite(Relay2,LOW);
  digitalWrite(Relay3,LOW);
  Serial.println("NO phase is healthy");
  delay(1000);
  lcd.clear();
  lcd.print("No healthy phase");
  delay(1000);
  
}
//Serial.println("END");
//Phase1==0;
//delay(1000);
if (HP1 && HP2 && U3)
{
  digitalWrite(alarm,LOW);
  digitalWrite(Relay1,LOW);
  digitalWrite(Relay2,HIGH);
  digitalWrite(Relay3,HIGH);
  Serial.println("Phase1 & Phase2 are healthy : select phase1");
  delay(1000);
  lcd.clear();
  lcd.print("R and Y healthy");
  delay(1000);
}
if (U1 && HP2 && HP3 )
{
  digitalWrite(alarm,LOW);
  digitalWrite(Relay1,HIGH);
  digitalWrite(Relay2,LOW);
  digitalWrite(Relay3,HIGH);
  Serial.println("Phase2 & Phase3 are healthy : select phase1");
  delay(1000);
}
if (HP1 && O2 && O3 )
{
  digitalWrite(alarm,LOW);
  digitalWrite(Relay1,LOW);
  digitalWrite(Relay2,HIGH);
  digitalWrite(Relay3,HIGH);
  Serial.println("only phase1 is healthy");
  delay(1000);
  lcd.clear();
  lcd.print("R Healthy ");
  delay(1000);
}
if (HP1 && HP2 && O3 )
{
  digitalWrite(alarm,LOW);
  digitalWrite(Relay1,LOW);
  digitalWrite(Relay2,HIGH);
  digitalWrite(Relay3,HIGH);
  Serial.println("only phase1 & phase2 are healthy: phase1 selected");
  delay(1000);
  lcd.clear();
  lcd.print("HP1 && HP2 && O3");
  delay(1000);
}
if (HP1 && U2 && O3 )
{
  digitalWrite(alarm,LOW);
  digitalWrite(Relay1,LOW);
  digitalWrite(Relay2,HIGH);
  digitalWrite(Relay3,HIGH);
  Serial.println("Only phase1 is healthy");
  delay(1000);
  lcd.clear();
  lcd.print("HP1 && U2 && O3");
  delay(1000);
}
if (U1 && U2 && O3 )
{
  digitalWrite(alarm,LOW);
  digitalWrite(Relay1,HIGH);
  digitalWrite(Relay2,HIGH);
  digitalWrite(Relay3,HIGH);
  Serial.println("No phase is healthy");
  delay(1000);
  lcd.clear();
  lcd.print("U1 && U2 && O3");
  delay(1000);
}
if (U1 && O2 && O3 )
{
  digitalWrite(alarm,LOW);
  digitalWrite(Relay1,HIGH);
  digitalWrite(Relay2,HIGH);
  digitalWrite(Relay3,HIGH);
  Serial.println("No phase is healthy");
  delay(1000);
  lcd.clear();
  lcd.print("U1 && O2 && O3");
  delay(1000);
}
if (U1 && HP2 && O3 )
{
  digitalWrite(alarm,LOW);
  digitalWrite(Relay1,HIGH);
  digitalWrite(Relay2,LOW);
  digitalWrite(Relay3,HIGH);
  Serial.println("Only phase2 is healthy");
  delay(1000);
  lcd.clear();
  lcd.print("U1 && HP2 && O3");
  delay(1000);
}
if (HP1 && U2 && HP3 )
{

  digitalWrite(alarm,LOW);
  digitalWrite(Relay1,LOW);
  digitalWrite(Relay2,HIGH);
  digitalWrite(Relay3,HIGH);
  Serial.println("only phase1 and phase3 are health :Select phase1");
  delay(1000);
  lcd.clear();
  lcd.print("HP1 && U2 && HP3");
  delay(1000);
}
if (HP2 && O1 && O3 )
{
  digitalWrite(alarm,LOW);
  digitalWrite(Relay1,HIGH);
  digitalWrite(Relay2,LOW);
  digitalWrite(Relay3,HIGH);  
  Serial.println("only phase1 is ");
  delay(1000);
  lcd.clear();
  lcd.print("HP2 && O1 && O3");
  delay(1000);
}
}
